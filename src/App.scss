// BREAKPOINT VARIABLE(S)
$breakpoint: 40rem;

// TYPE FALLBACK FONT VARIABLES
$text-font-fallback-fonts: Futura, Arial;
$display-font-fallback-fonts: Futura, Arial;

// COLOR DEFINITIONS
@import 'styles/_colors.scss';

// TYPE STYLES
@import 'styles/_type.scss';

// FORM ELEMENTS
@import 'styles/_formElements.scss';

// AND NOW THIS
header.header {
  position: fixed;
  display: flex;
  align-items: center;
  top: 0;
  width: 100%;
  background: $lightGreen;
  height: 80px;
  padding: 0px 24px;
  box-sizing: border-box;
  .logo {
    max-height: 32px;
  }
  nav {
    display: inline-block;
    a {
      line-height: 40px;
      display: inline-block;
      @include h4-font-family;
      @include h4-font-weight;
      @include h4-font-style;
      @include h4-font-size;
      @include h4-letter-spacing;
      @include h4-text-transform;
      @include h4-text-decoration;
      color: $text-color;
      padding: 0 1rem;
    }
    &.rightNav {
      float: right;
      button {
        @include secondary-button;
        margin-left: 1rem;
      }
    }
  }
  .globalSearch {
    width: 30%;
    position: relative;
    margin-left: auto;
    margin-right: auto;
    input {
      @include p-font-family;
      @include p-font-weight;
      @include p-font-style;
      @include p-font-size;
      @include p-letter-spacing;
      @include p-text-transform;
      @include p-text-decoration;
      border: 1px solid transparent;
      outline: none;
      line-height: 20px;
      height: 38px;
      padding: 9px;
      border-radius: 8px;
      padding-right: 40px;
      width: 100%;
    }
    svg {
      position: absolute;
      top: 50%;
      right: 16px;
      transform: translateY(-50%);
    }
  }
  input::placeholder {
    color: $midtone-color;
  }
  input:focus {
    border-color: $primary-color;
    box-shadow: $focus;
  }
}
.hero {
  background: $lightGreen;
  margin-top: 80px;
  padding: 80px 0;
  text-align: center;
}
.modal {
  position: fixed;
  top: 0;
  width: 100vw;
  height: 100vh;
  background: rgba(0, 0, 0, 0.5);
  color: #fff;
  z-index: 2;
  perspective: 1000;
  h1 {
    display: block;
    width: 400px;
    height: 400px;
    left: 50%;
    top: 50%;
    background: #fff;
    margin-left: -225px;
    margin-top: -225px;
    position: absolute;
    color: $text-color;
    padding: 50px;
    border-radius: 8px;
    box-shadow: $thicker-shadow;
  }
  &.isClosed {
    opacity: 0;
    pointer-events: none;
    h1 {
      transform: translateZ(-300px) rotateX(30deg) translateZ(300px);
      transition: transform 0.3s;
    }
  }
  &.isOpen {
  }
  transition: all 0.2s;
}

.alert-enter {
  opacity: 0;
  pointer-events: none;
  h1 {
    transform: translateZ(-1200px) rotateX(-3deg) translateZ(1200px);
    transition: transform 0.3s;
  }
}
.alert-enter-active {
  opacity: 1;
  h1 {
    transform: translateZ(-1200px) rotateX(0deg) translateZ(1200px);
    transition: transform 0.3s;
  }
}
.alert-exit {
  opacity: 1;
  h1 {
    transform: translateZ(-1200px) rotateX(0deg) translateZ(1200px);
    transition: transform 0.3s;
  }
}
.alert-exit-active {
  opacity: 0;
  pointer-events: none;
  h1 {
    transform: translateZ(-1200px) rotateX(-3deg) translateZ(1200px);
    transition: transform 0.3s;
  }
}

.example-enter {
  opacity: 0.01;
  width: 0px;
}

.example-enter.example-enter-active {
  opacity: 1;
  width: 100px;
  transition: 700ms;
}

.example-leave {
  opacity: 1;
  width: 100px;
}

.example-leave.example-leave-active {
  opacity: 0.01;
  width: 0px;
  transition: 700ms;
}
